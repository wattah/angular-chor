import { CustomerParkItemVO } from './customer-park-item-vo';
import { DocumentVO } from './documentVO';
import { ContactMethodNew } from './interlocutor/crud/contact-methode-new';
import { PersonAffiliateRoleVO } from './person-affiliate-role-vo';
import { PersonCustomerRoleVO } from './person-customer-role-vo';
import { ReferenceDataVO } from './reference-data-vo';
import { SolicitationTargetVO } from './solicitation-target-vo';

export interface PersonVO {
    id: number;
    categoryPerson: ReferenceDataVO;
    refSocialTitle: ReferenceDataVO;
    refFavoriteLanguage: ReferenceDataVO;
    refLocation: ReferenceDataVO;
    personRoleLabel : string;
    refSocioEconomicGroup: ReferenceDataVO;
    title: string;
    firstName: string;
    lastName: string;
    nickname: string;
    birthdate: Date;
    jobTitle: string;
    login: string;
    password: string;
    secondLogin: string;
    secondPassword: string;
    firstEventDate: Date;
    sesame: string;
    isFounderMembership: boolean;
    companyName: string;
    crmName: string;
    isHusbandWife: boolean;
    isAssistant: boolean;
    activityComplement: string;
    refCompanyType: ReferenceDataVO;
    isRetired: boolean;
    refNationality: ReferenceDataVO;
    photo: DocumentVO;
    refFavoriteContactMethod1: ReferenceDataVO;
    refFavoriteContactMethod2: ReferenceDataVO;
    refFavoriteContactMethod3: ReferenceDataVO;
    refFAI: ReferenceDataVO;
    refWifiHome: ReferenceDataVO;
    ref3GHome: ReferenceDataVO;
    expectations: string;
    digitalUses: string;
    portraitByCoach: string;
    refGlobalSatisfaction: ReferenceDataVO;
    isPresentToEvent: boolean;
    refEventAbsenceReason: ReferenceDataVO;
    refProfessionalUse: ReferenceDataVO;
    refPersonalUse: ReferenceDataVO;
    refTravelerProfile: ReferenceDataVO;
    refTechnophile: ReferenceDataVO;
    refConnected: ReferenceDataVO;
    refAssistance: ReferenceDataVO;
    sensitiveMemberComent: string;
    partnerProvideurContributorComent: string;
    stopMemberComent: string;
    behaviorWithParnasseComent: string;
    refSpender: ReferenceDataVO;
    refAccessibility: ReferenceDataVO;
    refInaccessibilityReason: ReferenceDataVO;
    refInfluence: ReferenceDataVO;
    hasConciergeService: string;
    conciergeServiceName: string;
    refNoParnasseConciergeReason: ReferenceDataVO;
    hasHomeStaff: string;
    refMembershipReason2: ReferenceDataVO;
    isHonoraryMember: boolean;
    refTestAccount: ReferenceDataVO;
    refJob: ReferenceDataVO;
    numberOfPersonAtHome: number;
    refPotentialCooptation: ReferenceDataVO;
    refPotentialTurnover: ReferenceDataVO;
    cityResidence: string;
    refCountryPrimaryResidence: ReferenceDataVO;
    refCountrySecondaryResidence1: ReferenceDataVO;
    refCountrySecondaryResidence2: ReferenceDataVO;
    refResidenceCriterion: ReferenceDataVO;
    hasMac: boolean;
    hasComputer: boolean;
    listRefDataPerson: ReferenceDataVO[];
    personTypes: ReferenceDataVO[];
    personCustomerRoles: PersonCustomerRoleVO[];
    solicitationsTarget: SolicitationTargetVO[];
    contactMethods: ContactMethodNew[];
    customerParkItemsAsUser: CustomerParkItemVO[];
    refConjointIsPresent: ReferenceDataVO;
    conjointInformations: string;
    refParnasseKnowledge: ReferenceDataVO;
    additionalInformations: string;
    membershipReasonComment: string;
    obsType: ReferenceDataVO;
    obscomment: string;
    refPersonalNetwork: ReferenceDataVO;
    refPublicNotoriety: ReferenceDataVO;
    refDigitalInfluence: ReferenceDataVO;
    isBusinessProvider: boolean;
    isSupplier: boolean;
    isSensitiveMember: boolean;
    isPartnerProvideurContributor: boolean;
    isStopMember: boolean;
    isBehaviorWithParnasse: boolean;
    refMemberColor: ReferenceDataVO;
    personAffiliateRoles: PersonAffiliateRoleVO[];
    fullName: string;
    coment: string;
    serviceName: string;
    segment: string;
    siret: string;
  }
