import { ReferenceDataVO } from "./reference-data-vo";
import { CriterionValueVO, NeedVO } from "./models";
import { NomenclatureVO } from "./nomenclature-vo";
import { AdminProductVO } from "./admin-product-vo";

export interface MasterProductVo {
        id: number;
        name: string;
        partnerId: number;
        partnerName: string;
        longDescription: string;
        shortDescription: string;
        stockQuantity: number;
        stockOrder: number;
        isOnStock: boolean;
        manufacturerId: number;
        manufacturerName: string;
        availabilityDate: Date;
        partnerProductReference: string;
        proratedAtBegin: boolean;
        proratedAtEnd: boolean;
        recurrent: boolean;
        subscriptionPeriodicity: string;
        productImageName: string;
        productDescriptionName: string;
        billingCategory: string;
        unitOfWorkId: number;
        unitOfWorkLabel: string;
        interventionDuration: number;
        detail: string;
        prerequisite: string;
        pricingConditions: string;
        quantityBlocked: boolean;
        commentMandatory: boolean;
        serialRequired: boolean;
        needs: NeedVO[];
        features: CriterionValueVO[];
        serialNumberPrefix: ReferenceDataVO;
        warrantyValue: number;
        productsVO: AdminProductVO[];
        acquisitionPrice: number;
        acquisitionPriceReal: number;
        articleClassId: number;
        nomenclature: NomenclatureVO;
        refDataArticleClass: ReferenceDataVO;
        annualReport: string;
        travelIncluded: boolean;
        pricingType: string;
        pricingTypeReal: string;
        marginRate: number;
        marginRateReal: number;
        marginValue: number;
        marginValueReal: number;
        orangeProductReference: string;
        publidispatchStockQuantity: number;
        isOnPublidispatchStock: boolean;
        ismodified: boolean;
        eanCode: string;
        terminalsFamily: string;
        customizedBenefit: boolean;
        imageProduct: any;
        documentProduct: any;
        tpsCategoryId: number;
        nbOccurrences: number;
        isRecurrenceLimitee: boolean;
        productLife: ReferenceDataVO;
}
