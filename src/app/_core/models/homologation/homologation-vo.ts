import { HomologationParticipantVO } from './homologation-participant-vo';
import { ApprovalDocumentVO } from './approval-document-vo';
import { HomologationServiceVO } from './homologation-service-vo';
import { HomologationLineVO } from './homologation-line-vo';
import { HomologationItemVO } from './homologation-item-vo';

export interface HomologationVO {
  id: number;
  nicheIdentifier: string[];
  companyNicheIdentifier: string;
  createdAt: Date;
  modifiedAt: Date;
  refMembershipStatus: string;
  category: string;
  seller: string;
  sellerFirstName: string;
  sellerLastName: string;
  sellerCuid: string;
  refAcquisitionChannel: string;
  signDate: Date;
  prospectingAbandonDate: Date;
  acceptanceDate: Date;
  prehomologationDeclarisPreventel: boolean;
  prehomologationSolvencyControls: boolean;
  prehomologationComment: string;
  prehomologationCommiteeOfSelectionRequest: boolean;
  prehomologationDecision: boolean;
  prehomologationDecisionDate: Date;
  homologationDeclarisPreventel: boolean;
  homologationSolvencyControls: boolean;
  homologationComment: string;
  homologationCommiteeOfSelectionRequest: boolean;
  homologationDecision: boolean;
  homologationDecisionDate: Date;
  service: HomologationServiceVO;
  fees: HomologationItemVO;
  lines: HomologationLineVO[];
  approvalDocuments: ApprovalDocumentVO[];
  taskId: number;
  idDesk: number;
  crmName: string;
  customerId: number;
  membershipManager: string;
  membershipManagerFirstName: string;
  membershipManagerLastName: string;
  storeManager: string;
  prehomologationCommiteeOfSelectionComment: string;
  homologationCommiteeOfSelectionComment: string;
  comment: string;
  isCustomerSaved: boolean;
  feesPaymentMethod: string;
  sellerId: number;
  storeManagerId: number;
  dateOfTechnicalStudy: Date;
  beneficiaires: HomologationParticipantVO[];
  company: HomologationParticipantVO;
  representantLegal: HomologationParticipantVO;
  typeParcours: string;
}
